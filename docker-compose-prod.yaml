services:
  web:
    build: ./frontend
    depends_on:
      - api
    expose: 
      - 80
    networks:
      - frontend
  api:
    build: ./backend
    depends_on:
      - db
    expose:
      - 8000
    networks:
      - frontend
      - backend
    environment:
      - VITE_BASE_URL=${BASE_URL}
    secrets:
      - DB_PASSWORD
  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    networks:
      - frontend
    volumes:
      - ~/cert-data/prod/nginx:/etc/nginx/conf.d
      - ~/cert-data/certbot/conf:/etc/letsencrypt
      - ~/cert-data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    networks:
      - frontend
    environment:
      - BASE_URL=${BASE_URL}
    volumes:
      - ~/cert-data/certbot/conf:/etc/letsencrypt
      - ~/cert-data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  db:
    image: mysql
    restart: always
    networks:
      - backend
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: yes
      MYSQL_ONETIME_PASSWORD: yes
      MYSQL_DATABASE: autocross
      MYSQL_USER: autocross
      MYSQL_PASSWORD_FILE: /run/secrets/DB_PASSWORD
    volumes:
      - db_data:/var/lib/mysql
      - ./data/sql:/docker-entrypoint-initdb.d
    secrets:
      - DB_PASSWORD

networks:
  frontend:
  backend:

secrets:
  DB_PASSWORD:
    environment: "DB_PASSWORD"

volumes:
  db_data: